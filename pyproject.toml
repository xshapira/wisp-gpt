[project]
name = "wisp-gpt"
version = "0.0.2"
description = "WispGPT - Clever as a wisp, powerful as GPT - your personal AI sidekick"
readme = "README.md"
requires-python = ">=3.11,<3.13"
dependencies = [
  "numpy>=1.26.0,<2.0.0",
  "langchain>=0.2.9",
  "langchain-core>=0.2.22",
  "langchain-community>=0.2.9",
  "langchain-openai>=0.1.17",
  "streamlit>=1.36.0",
  "scikit-learn>=1.5.1",
  "openai>=1.35.15",
  "tiktoken>=0.7.0",
  "unstructured[pdf]>=0.14.10",
  "faiss-cpu>=1.8.0.post1",
  "pydub>=0.25.1",
  "tavily-python>=0.3.5",
  "langchain-unstructured>=0.1.2",
]

[tool.uv]
dev-dependencies = [
  "ruff>=0.6.3",
  "basedpyright>=1.17.1",
  "pre-commit>=3.6.1",
  "pytest>=8.0.0",
  "pytest-sugar>=1.0.0",
  "requests-mock>=1.11.0",
  "pytest-mock>=3.12.0",
  "pysnooper>=1.2.0",
  "watchdog>=4.0.2",
]

[tool.basedpyright]
typeCheckingMode = "off"

[tool.ruff]
line-length = 88
exclude = ['.git', '__pycache__', '__init__.py', '.mypy_cache', '.pytest_cache']
extend-include = ["*.ipynb"]

[tool.ruff.lint]
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C4", # flake8-comprehensions
  "B",  # flake8-bugbear
  "UP", # pyupgrade
]
ignore = [
  "E501", # line too long
  "C901", # Comprehension is too complex (11 > 10)
  "W191", # indentation contains tabs
  "E402",
]
unfixable = ["F841"]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
