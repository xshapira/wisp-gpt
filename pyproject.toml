[tool.poetry]
name = "Wisp"
version = "0.0.2"
description = "WispGPT - Clever as a wisp, powerful as GPT - your personal AI sidekick"
authors = ["Max Shapira <max@winoutt.com>"]
package-mode = false

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
aiofiles = "23.2.1"
aiohttp = "3.9.0"
chromadb = "0.4.11"
duckduckgo-search = "4.4"
ebooklib = "0.18"
elasticsearch = "8.9.0"
faiss-cpu = "1.7.4"
ffmpeg = "1.4"
ffmpeg-python = "0.2.0"
gpt4all = "2.0.2"
html2text = "2020.1.16"
itsdangerous = "2.1.2"
langchain = "0.0.332"
manifest-ml = "0.0.1"
markdown = "3.4.4"
msg-parser = "1.2.0"
openai = "0.28.0"
openpyxl = "3.1.2"
orjson = "3.9.9"
pinecone-client = "2.2.4"
playwright = "1.40.0"
pypandoc = "1.11"
pypdf = "3.16.2"
pydub = "0.25.1"
pytube = "11.0.2"
python-docx = "0.8.11"
python-pptx = "0.6.21"
sentence-transformers = "2.2.2"
spacy = "3.6.1"
streamlit = "1.27.2"
tiktoken = "0.5.1"
ujson = "5.8.0"
unstructured = "0.10.16"
unstructured-inference = "0.6.6"
unstructured-pytesseract = "0.3.12"
xlrd = "2.0.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.2.1"
mypy = "^1.7.0"
pre-commit = "^3.5.0"
ipykernel = "6.26.0"
annotated-types = "0.5.0"
watchdog = "3.0.0"

[tool.mypy]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
check_untyped_defs = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ['tests.*']
disallow_untyped_defs = false
strict_equality = false

[tool.ruff]
line-length = 88
exclude = ['.git', '__pycache__', '__init__.py', '.mypy_cache', '.pytest_cache']
select = [
  "E",  # pycodestyle errors
  "W",  # pycodestyle warnings
  "F",  # pyflakes
  "I",  # isort
  "C",  # flake8-comprehensions
  "B",  # flake8-bugbear
  "UP", # pyupgrade
]
ignore = [
  "E501", # line too long
  "C901", # Comprehension is too complex (11 > 10)
  "W191", # indentation contains tabs
  "E402",
]
unfixable = ["F841"]
extend-include = ["*.ipynb"]

[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
